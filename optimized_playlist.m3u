import re
import requests

def parse_m3u(file_path):
    with open(file_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()

    channels = []
    temp = {}
    for line in lines:
        line = line.strip()
        if line.startswith('#EXTINF'):
            temp['info'] = line
        elif line and not line.startswith('#'):
            temp['url'] = line
            channels.append(temp)
            temp = {}
    return channels

def is_russian(text):
    # Проверяем наличие кириллицы в названии
    return bool(re.search('[а-яА-Я]', text))

def check_url(url):
    try:
        # Используем HEAD-запрос для проверки доступности потока
        response = requests.head(url, timeout=5, allow_redirects=True)
        return response.status_code == 200
    except:
        return False

def remove_duplicates(channels):
    seen_names = set()
    unique = []
    for ch in channels:
        # Ключем дубликата считаем имя канала (без параметров)
        name = ch['info'].split(',', 1)[-1].strip().lower()
        if name not in seen_names:
            seen_names.add(name)
            unique.append(ch)
    return unique

def save_m3u(channels, output_path):
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write('#EXTM3U\n')
        for ch in channels:
            f.write(ch['info'] + '\n')
            f.write(ch['url'] + '\n')

def main():
    input_file = 'kino-plus.m3u'  # Исходный плейлист
    output_file = 'cleaned_kino_plus.m3u'  # Очищенный плейлист

    channels = parse_m3u(input_file)
    print(f'Всего каналов в плейлисте: {len(channels)}')

    channels = remove_duplicates(channels)
    print(f'После удаления дубликатов: {len(channels)}')

    filtered_channels = []
    print('Проверяем ссылки и фильтруем русскоязычные каналы...')

    for ch in channels:
        name = ch['info'].split(',', 1)[-1]
        if is_russian(name):
            if check_url(ch['url']):
                filtered_channels.append(ch)
            else:
                print(f'Ссылка не работает: {name}')
        else:
            print(f'Пропущен не русском язык: {name}')

    print(f'Оставлено рабочих русскоязычных каналов: {len(filtered_channels)}')

    save_m3u(filtered_channels, output_file)
    print(f'Очищенный плейлист сохранен в {output_file}')

if __name__ == "__main__":
    main()
